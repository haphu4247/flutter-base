# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        sdk: [3.10.1]
    steps:
      
      # The flutter action needs java so include it
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      
      - name: Flutter SDK Install
        uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: ${{ matrix.sdk }}
          channel: 'stable'
      
      # check out project
      - uses: actions/checkout@v3

      - name: Check Flutter SDK Version
        working-directory: ./base_flutter
        run: flutter --version

      - name: Install dependencies
        working-directory: ./base_flutter
        run: flutter pub get
      
      - name: Generate Text
        working-directory: ./base_flutter
        run: flutter gen-l10n --arb-dir lib/shared/languages/l10n
        
      - name: Run tests
        working-directory: ./base_flutter
        run: flutter test
      
      - name: Build Dev APK
        working-directory: ./base_flutter
        run: flutter build apk --release --flavor dev -t lib/main_dev.dart

      # - name: Build Staging APK
      #   working-directory: ./base_flutter
      #   run: flutter build apk --release --flavor staging -t lib/main_staging.dart
      
      # - name: Build Prod Appbundle
      #   working-directory: ./base_flutter
      #   run: flutter build appbundle --release --flavor prod -t lib/main_prod.dart
